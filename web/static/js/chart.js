// Generated by LiveScript 1.3.1
(function(){
  var lc;
  lc = {};
  return ld$.fetch('https://plotdb.com/d/chart/1073', {
    method: 'GET'
  }, {
    type: 'json'
  }).then(function(it){
    lc.chart = it;
    console.log(it);
    return getfa('chart');
  }).then(function(fs){
    var ed, view;
    fs.writeFileSync('index.html', lc.chart.doc.content);
    fs.writeFileSync('index.css', lc.chart.style.content);
    fs.writeFileSync('index.js', lc.chart.code.content);
    ed = new Editor({
      node: {
        edit: '[ld=editor]',
        view: '[ld=viewer]'
      },
      editlet: {},
      renderer: function(arg$){
        var fs, payload, k, v, ret, chart, code;
        fs = arg$.fs;
        if (!fs) {
          return;
        }
        payload = {
          html: fs.readFileSync('index.html').toString(),
          js: fs.readFileSync('index.js').toString(),
          css: fs.readFileSync('index.css').toString()
        };
        for (k in payload) {
          v = payload[k];
          ret = transpiler.detect(v);
          if (ret.mod) {
            payload[k] = ret.mod.transform(v);
          }
        }
        chart = {
          doc: {
            name: "document",
            content: payload.html
          },
          style: {
            name: "stylesheet",
            content: payload.css
          },
          code: {
            name: "code",
            content: payload.js
          }
        };
        import$(lc.chart, chart);
        code = "<html>\n<head>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://plotdb.com/dist/0.1.0/plotdb.min.css\"/>\n<style type=\"text/css\">\nhtml,body { width: 100%; height: 100%; margin: 0; padding: 0 }\n</style>\n</head>\n<body>\n<div id=\"root\" style=\"width:100%;height:100%\"></div>\n<script src=\"https://plotdb.com/dist/latest/plotdb.min.js\"></script>\n<script src=\"https://plotdb.com/lib/d3/3.5.12/index.min.js\"></script>\n<script src=\"https://plotdb.com/lib/plotd3/0.1.0/index.js\"></script>\n<script>\n  var chartobj = " + JSON.stringify(lc.chart) + ";\n  var c = new plotdb.view.chart(chartobj);\n  c.data(\n    [0,1,2,3,4,5,6,7,8,9].map(function(it) { return {name: it, v1: Math.random(), v2: Math.random()}; }),\n    false, { value: [\"v1\"], order: [\"name\"] }\n  )\n  c.attach(\"#root\");\n  c.render();\n</script>\n</body>\n</html>";
        return code;
      }
    });
    ed.setFiles(fs);
    ed.open('index.js');
    return view = new ldView({
      root: document.body,
      action: {
        click: {
          edit: function(arg$){
            var node, name;
            node = arg$.node;
            name = node.getAttribute('data-name');
            return ed.open("index." + name);
          }
        }
      }
    });
  });
})();
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}